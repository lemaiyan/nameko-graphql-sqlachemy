scalar DateTime
type Rank {
    id: ID!
    name: String!
    inRank: [Crew!]!
    dateAdded: DateTime
}

type Race {
    id: ID!
    name: String!
    inRace: [Crew!]!
    dateAdded: DateTime
}

type Ship {
    id: ID!
    name: String!
    shipCrew: [Crew!]!
    dateAdded: DateTime
}

type Crew {
    id: ID!
    name: String!
    rank: Rank!
    race: Race!
    ship: Ship!
    dateAdded: DateTime!
}

input addShipInput {
    name: String
}

input addRaceInput {
    name: String
}

input addRankInput {
    name: String
}

input addCrewInput {
    name: String!
    rank: Rank!
    race: Race!
    ship: Ship!
}

type Query {
    allShip: [Ship!]!
    allCrew:[Crew!]!
    allRaces: [Race!]!
    allRank: [Rank!]!
}

type Mutation {
    addShip(input: addShipInput!): Ship!
    addCrew(input: addCrewInput!): Crew!
    addRace(input: addRaceInput!): Race!
    addRace(input: addRankInput!): Rank!
}